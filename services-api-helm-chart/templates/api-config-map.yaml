apiVersion: v1
kind: ConfigMap
metadata:
  name: avatar-api-config
  labels:
    {{- include "avatar.labels" . | nindent 4 }}

data:
  IS_TELEMETRY_ENABLED: {{ .Values.api.isTelemetryEnabled | quote }}
  IS_SENTRY_ENABLED: {{ .Values.api.isSentryEnabled | quote }}
  DB_HOST: {{- if .Values.gcp.dbInstanceConnectionName }} "127.0.0.1" {{- else }} {{ .Values.dbHost | quote }} {{- end }}
  DB_PORT: {{ .Values.dbPort | quote }}
  ENV_NAME: {{ .Values.envName | quote }}
  # Set to externally accessible API url (should be with https)
  AVATAR_API_URL: {{ .Values.api.baseUrl | quote }}
  AVATAR_PDFGENERATOR_URL: http://{{ .Values.pdfgeneratorHost }}:{{ .Values.pdfgeneratorPort }}
  AVATAR_WEB_CLIENT_URL: {{ .Values.api.webClientUrl | quote }}
  SHARED_STORAGE_PATH: {{ .Values.api.sharedStoragePath | quote }}
  USE_EMAIL_AUTHENTICATION: {{ .Values.api.useEmailAuthentication | default "false" | quote }}
  MAX_ALLOWED_DIMENSIONS_PER_DATASET: {{ .Values.api.maxAllowedDimensionsPerDataset | quote }}
  MAX_ALLOWED_LINES_PER_DATASET: {{ .Values.api.maxAllowedLinesPerDataset | quote }}
  LOG_LEVEL: {{ .Values.api.logLevel | quote }}
  DELETE_FILES_USING_CRONJOB: {{ .Values.api.deleteFilesUsingCronjob | quote }}
  STORAGE_ENDPOINT_HOST: {{ .Values.api.storageEndpointHost | quote }}
  STORAGE_ENDPOINT_PORT: {{ .Values.api.storageEndpointPort | quote }}
  ACCESS_CONTROL_ENDPOINT_HOST: {{ .Values.api.accessControlEndpointHost | quote }}
  ACCESS_CONTROL_ENDPOINT_PORT: {{ .Values.api.accessControlEndpointPort | quote }}
  DASK_SCHEDULER: {{ .Values.api.daskSchedulerUrl | quote }}