events {
    worker_connections 1024;
}

http {
    server {
        listen               8080;
        server_name          localhost;

        # Security headers
        # NOTE: Those headers are also defined at the application level as well.
        add_header Strict-Transport-Security "max-age=31536000; preload" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-Frame-Options "DENY" always;

        location /api {
            rewrite ^/api(.*) $1 break;
            proxy_pass http://api:8000;
        }

        location / {
            # Use $host, or specify the domain:port that your users actually see
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-Host $host:$server_port;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-For $remote_addr;

            proxy_pass http://web:3000;
        }
    }

    server {
        listen 8081;

        # Security headers
        # NOTE: Those headers are also defined at the application level as well.
        add_header Strict-Transport-Security "max-age=31536000; preload" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-Frame-Options "DENY" always;

        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $remote_addr;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;

        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Ssl on;

        location / {
            proxy_pass http://s3:8333;
        }
    }
}
