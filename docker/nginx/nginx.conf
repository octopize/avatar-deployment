events {
    worker_connections 1024;
}

http {
    ##################
    # HTTPS config
    server {
        listen               443 ssl;

        # Use the PUBLIC_URL to set the server name
        server_name          PUBLIC_URL;

        # Point to the full chain certificate file
        ssl_certificate /etc/nginx/tls/server.fullchain.crt;

        # Point to the DECRYPTED, password-less private key
        ssl_certificate_key /etc/nginx/tls/private/server.decrypted.key;

        # Security headers
        # NOTE: Those headers are also defined at the application level as well.
        add_header Strict-Transport-Security "max-age=31536000; preload" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-Frame-Options "DENY" always;

        location /api {
            rewrite ^/api(.*) $1 break;
            proxy_pass http://api:8000;
        }

        location /storage {
            # Strip the /storage prefix before forwarding to backend
            rewrite ^/storage(.*) $1 break;
            proxy_set_header X-Forwarded-Prefix /storage;

            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $remote_addr;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Port $server_port;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Ssl on;

            proxy_pass http://s3:8333;

            # Timeouts for long-running requests (e.g., large file uploads)
            proxy_send_timeout 300s;
            proxy_read_timeout 300s;
        }

        location / {
            proxy_pass http://web:3000;

            # Use $host, or specify the domain:port that your users actually see
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-Host $host;
            # proxy_set_header X-Forwarded-Host $host:$server_port;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-For $remote_addr;

            # WebSocket support for Next.js HMR
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }
    }

}

    
