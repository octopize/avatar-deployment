apiVersion: apps/v1
kind: Deployment
metadata:
  name: avatar-worker
  labels:
    {{- include "avatar.labels" . | nindent 4 }}
    app.kubernetes.io/component: worker

spec:
  selector:
    matchLabels:
      app.kubernetes.io/component: worker
  replicas: {{ .Values.resources.workerReplicas }}
  template:
    metadata:
      labels:
        {{- include "avatar.labels" . | nindent 8 }}
        app.kubernetes.io/component: worker
    spec:
      serviceAccountName: {{ .Values.gcp.ksaName | default "" | quote }}
      tolerations:
        # Allow this pod to be scheduled on tainted nodes with a key of "highMemory"
        # https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration
      - key: "highMemory"
        operator: "Exists"
      {{ if .Values.resources.workerPreferredNodeType }}
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: nodeType
                operator: In
                values:
                - {{ .Values.resources.workerPreferredNodeType | quote}}   
      {{ end }}
      containers:
        {{- include "avatar.db_proxy_container" $ }}
        - name: avatar-worker
          image: quay.io/octopize/api:{{ .Values.avatarVersion }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          volumeMounts:
            - mountPath: /var/run/secrets
              name: secrets
              readOnly: true
          {{ if .Values.debug.storage.useLocal }}
            - mountPath: {{ .Values.api.sharedStoragePath }}
              name: avatar-pv-storage
          {{ end }}
          # This worker uses the default celery queue ('celery') and the small queue to handle small jobs if autoscaling with keda is enabled.
          # If autoscaling is not enabled, it listens to every queue.
          #
          # We are using 'args' and not 'command' as we want to use the entrypoint of the Dockerfile https://stackoverflow.com/a/49657024
          args: 
            # The following syntax is so that we don't have to have every argument separated with a comma in a list
            # and that we can go to a newline that will later be transformed into a space
            - "/bin/bash"
            - "-c"
            - >-
              celery -A api.lib.task worker --loglevel=info --pool=solo --concurrency=4 
              {{- if .Values.worker.useKedaAutoscaler }} -Q celery,small {{- end }}
          resources:
            requests:
              memory: {{ .Values.resources.workerMemoryRequest }}
              cpu: {{ .Values.resources.workerCpuRequest }}
            limits:
              memory: {{ .Values.resources.workerMemoryRequest }}
              cpu: {{ .Values.resources.workerCpuRequest }}
          env:
            {{- include "avatar.app_env" . }}
            {{ if .Values.debug.storage.useLocal }}
            - name: USER_ID
              value: "1000"
            {{ end }}
      imagePullSecrets:
        - name: docker-local-pull-secret
      volumes:
        - name: secrets
          secret:
            secretName: api
            # We specifically list only the secrets that are needed in the image
            items:
            - key: db_name
              path: db_name
            - key: db_user
              path: db_user
            - key: db_password
              path: db_password
            - key: file_encryption_key
              path: file_encryption_key
    {{ if .Values.debug.storage.useLocal }}
        - name: avatar-pv-storage
          persistentVolumeClaim:
            claimName: avatar-pv-claim
      securityContext:
        runAsUser: 0
    {{ end }}