{{- if eq .Values.ingress.use_default true  }}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: api-ingress
  annotations:
    kubernetes.io/ingress.allow-http: "false"
    networking.gke.io/v1beta1.FrontendConfig: "api-frontend-config"
  labels:
    {{- include "avatar.labels" . | nindent 4 }}
spec:
  defaultBackend:
    service:
      name: avatar-api
      port:
        number: 8000

{{- else if eq .Values.ingress.useGCP true }}

{{- if .Values.ingress.gcp.managedCertificateName }}
apiVersion: networking.gke.io/v1
kind: ManagedCertificate
metadata:
  name: managed-cert
  labels:
    {{- include "avatar.labels" . | nindent 4 }}
spec:
  domains:
    - {{ get (.Values.api.baseUrl | urlParse) "host" }}
{{- end }}
---

# https://cloud.google.com/kubernetes-engine/docs/how-to/ingress-features
apiVersion: networking.gke.io/v1beta1
kind: FrontendConfig
metadata:
  name: api-frontend-config
spec:
# https://cloud.google.com/kubernetes-engine/docs/how-to/ingress-features#https_redirect
  redirectToHttps:
    enabled: true #disable (or not? maybe internal communication is done with HTTP) once we have a certificate on the load balancer to prevent connection as http

---

# https://cloud.google.com/kubernetes-engine/docs/how-to/ingress-features#configuring_ingress_features_through_backendconfig_parameters
apiVersion: cloud.google.com/v1
kind: BackendConfig
metadata:
  name: api-backend-config
spec:
  timeoutSec: 20
  healthCheck:
    type: HTTP
    requestPath: "/health"
    # This should match the Pod's containerPort
    port: 8000

---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: api-ingress
  annotations:
    kubernetes.io/ingress.global-static-ip-name: {{ .Values.ingress.gcp.staticIpName | quote }}
    {{- if .Values.ingress.gcp.managedCertificateName }}
    networking.gke.io/managed-certificates: {{ .Values.ingress.gcp.managedCertificateName | quote }}
    {{- else if .Values.ingress.gcp.preSharedCertificateName }}
    ingress.gcp.kubernetes.io/pre-shared-cert: {{ .Values.ingress.gcp.preSharedCertificateName | quote }}
    {{ end }}
    kubernetes.io/ingress.class: "gce"
  labels:
    {{- include "avatar.labels" . | nindent 4 }}
spec:
  defaultBackend:
    service:
      name: avatar-api
      port:
        number: 8000
{{- end }}
