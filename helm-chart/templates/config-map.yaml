apiVersion: v1
kind: ConfigMap
metadata:
  name: avatar-config
  labels:
    {{- include "avatar.labels" . | nindent 4 }}

data:
  CELERY_BROKER_URL: redis://{{ .Values.redisHost }}:{{ .Values.redisPort }}/0
  CELERY_RESULT_BACKEND: redis://{{ .Values.redisHost }}:{{ .Values.redisPort }}/1
  RATELIMIT_REDIS_URL: redis://{{ .Values.redisHost }}:{{ .Values.redisPort }}/2
  IS_TELEMETRY_ENABLED: {{ .Values.api.isTelemetryEnabled | quote }}
  IS_SENTRY_ENABLED: {{ .Values.api.isSentryEnabled | quote }}
  DB_HOST: {{- if .Values.gcp.dbInstanceConnectionName }} "127.0.0.1" {{- else }} {{ .Values.dbHost | quote }} {{- end }}
  DB_PORT: {{ .Values.dbPort | quote }}
  ENV_NAME: {{ .Values.envName | quote }}
  # Set to externally accessible API url (should be with https)
  BASE_API_URL: {{ .Values.api.baseUrl | quote }}
  PDFGENERATOR_URL: http://{{ .Values.pdfgeneratorHost }}:{{ .Values.pdfgeneratorPort }}
  SHARED_STORAGE_PATH: {{ .Values.api.sharedStoragePath | quote }}
  USE_EMAIL_AUTHENTICATION: {{ .Values.api.useEmailAuthentication | default "false" | quote }}
  MAX_ALLOWED_DIMENSIONS_PER_DATASET: {{ .Values.api.maxAllowedDimensionsPerDataset | quote }}
  MAX_ALLOWED_LINES_PER_DATASET: {{ .Values.api.maxAllowedLinesPerDataset | quote }}
  WORKER_MEDIUM_QUEUE_SIZE_THRESHOLD: {{ .Values.api.workerMediumQueueSizeThreshold | quote }}
  WORKER_HUGE_QUEUE_SIZE_THRESHOLD: {{ .Values.api.workerHugeQueueSizeThreshold | quote }}
  LOG_LEVEL: {{ .Values.api.logLevel | quote }}
  DELETE_FILES_USING_CRONJOB: {{ .Values.api.deleteFilesUsingCronjob | quote }}
  WORKER_MEDIUM_QUEUE_ON_DISK_SIZE_THRESHOLD_BYTES: {{ .Values.api.workerMediumQueueOnDiskSizeThresholdBytes | quote }}
  WORKER_HUGE_QUEUE_ON_DISK_SIZE_THRESHOLD_BYTES: {{ .Values.api.workerHugeQueueOnDiskSizeThresholdBytes | quote }}