apiVersion: apps/v1
kind: Deployment
metadata:
  name: avatar-api
  labels:
    {{- include "avatar.labels" . | nindent 4 }}
    app.kubernetes.io/component: api

spec:
  selector:
    matchLabels:
      app.kubernetes.io/component: api
  replicas: 1
  template:
    metadata:
      labels:
        {{- include "avatar.labels" . | nindent 8 }}
        app.kubernetes.io/component: api
    spec:
      serviceAccountName: {{ .Values.gcp.ksaName | default "" | quote }}
      containers:
        - name: avatar-api
          image: quay.io/octopize/api:{{ .Values.avatarVersion }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          volumeMounts:
            - mountPath: /var/run/secrets
              name: secrets
              readOnly: true
          {{- if and .Values.debug.isDebugMode .Values.debug.useGCPStorage }}
            - mountPath: /home/avatar/application_default_credentials.json
              name: google-cloud-application-credentials
          {{- end }}

          resources:
            requests:
              memory: {{ .Values.resources.apiMemoryRequest }}
              cpu: {{ .Values.resources.apiCpuRequest }}
            limits:
              memory: {{ .Values.resources.apiMemoryRequest }}
              cpu: {{ .Values.resources.apiCpuRequest }}
          env:
            {{- template "avatar.app_env" }}
            - name: RATELIMIT_REDIS_URL
              valueFrom:
                configMapKeyRef:
                  name: avatar-config
                  key: RATELIMIT_REDIS_URL
            - name: USE_EMAIL_AUTHENTICATION
              valueFrom:
                configMapKeyRef:
                  name: avatar-config
                  key: USE_EMAIL_AUTHENTICATION
            {{- if and .Values.debug.isDebugMode .Values.debug.useGCPStorage }}
            - name: GOOGLE_APPLICATION_CREDENTIALS
              value: "/home/avatar/application_default_credentials.json"
            - name: GOOGLE_CLOUD_PROJECT
              value: {{ .Values.debug.googleCloudProject }}
            {{- end }}

          ports:
            - name: api
              containerPort: 8000
          readinessProbe:
            httpGet:
              path: "/health"
              port: 8000
              httpHeaders:
              - name: Host
                value: "127.0.0.1"
            failureThreshold: 3
            periodSeconds: 30
            timeoutSeconds: 2
          livenessProbe:
            # https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
            httpGet:
              path: "/health"
              port: 8000
              httpHeaders:
              - name: Host
                value: "127.0.0.1"
            failureThreshold: 3
            periodSeconds: 30
            timeoutSeconds: 2
        {{- template "avatar.db_proxy" . }}
      imagePullSecrets:
        - name: docker-local-pull-secret
      volumes:
        - name: secrets
          secret:
            secretName: api
      {{ if and .Values.debug.isDebugMode .Values.debug.useGCPStorage }}
        - name: google-cloud-application-credentials
          hostPath:
            path: {{ .Values.debug.googleApplicationCredentialsFilename | quote }}
            type: File
      {{ end }}
