apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: avatar
  name: avatar-worker
  labels:
    app: avatar-worker
spec:
  selector:
    matchLabels:
      app: avatar-worker
  replicas: 1
  template:
    metadata:
      labels:
        app: avatar-worker
    spec:
      containers:
        - name: avatar-worker
          image: quay.io/octopize/api:latest
          command: ["celery", "-A", "api.lib.task", "worker", "--loglevel=info"]
          volumeMounts:
            - mountPath: /shared
              name: shared
            - mountPath: /var/run/secrets
              name: secrets
              readOnly: true
          resources:
            requests:
              memory: "4Gi"
              cpu: "2000m"
            limits:
              memory: "32Gi"
              cpu: "4000m"
          env:
            - name: ENV_NAME
              valueFrom:
                configMapKeyRef:
                  name: avatar-config
                  key: ENV_NAME
            - name: CELERY_BROKER_URL
              valueFrom:
                configMapKeyRef:
                  name: avatar-config
                  key: CELERY_BROKER_URL
            - name: CELERY_RESULT_BACKEND
              valueFrom:
                configMapKeyRef:
                  name: avatar-config
                  key: CELERY_RESULT_BACKEND
            - name: IS_SENTRY_ENABLED
              valueFrom:
                configMapKeyRef:
                  name: avatar-config
                  key: IS_SENTRY_ENABLED
            - name: IS_TELEMETRY_ENABLED
              valueFrom:
                configMapKeyRef:
                  name: avatar-config
                  key: IS_TELEMETRY_ENABLED
            - name: BASE_API_URL
              valueFrom:
                configMapKeyRef:
                  name: avatar-config
                  key: BASE_API_URL
            - name: PDFGENERATOR_URL
              valueFrom:
                configMapKeyRef:
                  name: avatar-config
                  key: PDFGENERATOR_URL
            - name: TASK_MAX_TIME_LIMIT
              valueFrom:
                configMapKeyRef:
                  name: avatar-config
                  key: TASK_MAX_TIME_LIMIT
            - name: DB_HOST
              valueFrom:
                configMapKeyRef:
                  name: avatar-config
                  key: DB_HOST
            - name: DB_PORT
              valueFrom:
                configMapKeyRef:
                  name: avatar-config
                  key: DB_PORT
      imagePullSecrets:
        - name: docker-local-pull-secret
      volumes:
        - name: shared
          persistentVolumeClaim:
            claimName: shared
        - name: secrets
          projected:
            sources:
            - secret:
                name: api
            - secret:
                name: postgres-secret
      